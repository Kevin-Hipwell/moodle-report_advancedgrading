{"version":3,"sources":["../../src/sdt/datatable.js"],"names":["DataTable","table","options","dom","document","querySelector","defaultConfig","layout","labels","initialized","initialLayout","innerHTML","initialSortable","sortable","header","tHead","data","headings","tBodies","length","rows","Error","listeners","onResize","event","init","classList","contains","Object","assign","currentPage","onFirstPage","hiddenColumns","columnRenderers","selectedColumns","render","setTimeout","emit","plugins","entries","forEach","plugin","createElement","enabled","type","renderPage","renderPager","renderHeader","template","dataToTable","call","body","head","foot","tFoot","appendChild","hasRows","h","t","Array","from","cells","insertBefore","hiddenHeader","hasHeadings","slice","removeChild","footer","html","wrapper","class","top","scrollY","bottom","replace","paging","perPageSelect","wrap","perPage","select","val","selected","option","Option","add","outerHTML","searchable","form","placeholder","paginatorWrapper","paginator","container","pagers","querySelectorAll","label","parentNode","replaceChild","rect","getBoundingClientRect","activeRows","activeHeadings","update","setColumns","fixHeight","fixColumns","fixedHeight","fixedColumns","bindEvents","th","totalPages","index","frag","createDocumentFragment","pages","row","clear","onLastPage","lastPage","setMessage","noRows","current","f","items","searching","searchData","info","string","prev","next","firstLast","firstText","nextPrev","prevText","pager","links","truncatePager","pagerDelta","ellipsisText","p","remove","nextText","lastText","cloneNode","i","textContent","firstElementChild","getAttribute","originalCellIndex","link","href","setAttribute","selector","addEventListener","parseInt","value","input","search","e","target","closest","nodeName","toLowerCase","hasAttribute","page","preventDefault","columns","sort","indexOf","window","width","ajax","cell","isArray","hasOwnProperty","concat","push","renderer","column","format","hidden","hide","dataIndex","includes","rebuild","removeEventListener","paginate","num","sorting","map","tr","filter","hd","columnWidths","style","height","headerTable","ow","offsetWidth","w","paddingTop","paddingBottom","border","parentElement","headercontainer","thd","paddingRight","clientWidth","scrollHeight","clientHeight","overflowY","r","widths","cellIndex","visible","query","idx","inArray","doesQueryMatch","split","reduce","bool","word","content","x","searchIndex","noResults","isNaN","direction","heading","parent","userOptions","headers","arr","str","download","skipColumn","lineDelimiter","columnDelimiter","tableName","replacer","space","selection","text","trim","substring","JSON","stringify","filename","encodeURI","click","obj","shift","values","json","insert","thead","tbody","open","print","message","colspan","Columns","Rows","callback","events","splice","apply","prototype","arguments","prop"],"mappings":"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","sourcesContent":["import {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {dataToTable} from \"./table\"\nimport {defaultConfig} from \"./config\"\nimport {\n    isObject,\n    isJson,\n    createElement,\n    flush,\n    button,\n    truncate\n} from \"./helpers\"\n\n\nexport class DataTable {\n    constructor(table, options = {}) {\n\n        const dom = typeof table === \"string\" ? document.querySelector(table) : table\n\n        // user options\n        this.options = {\n            ...defaultConfig,\n            ...options,\n            layout: {\n                ...defaultConfig.layout,\n                ...options.layout\n            },\n            labels: {\n                ...defaultConfig.labels,\n                ...options.labels\n            }\n        }\n\n        this.initialized = false\n\n        this.initialLayout = dom.innerHTML\n        this.initialSortable = this.options.sortable\n\n        // Disable manual sorting if no header is present (#4)\n        if (!this.options.header) {\n            this.options.sortable = false\n        }\n\n        if (dom.tHead === null) {\n            if (!this.options.data ||\n                (this.options.data && !this.options.data.headings)\n            ) {\n                this.options.sortable = false\n            }\n        }\n\n        if (dom.tBodies.length && !dom.tBodies[0].rows.length) {\n            if (this.options.data) {\n                if (!this.options.data.data) {\n                    throw new Error(\n                        \"You seem to be using the data option, but you've not defined any rows.\"\n                    )\n                }\n            }\n        }\n\n        this.dom = dom\n\n        this.table = this.dom // For compatibility. Remove in version 4\n\n        this.listeners = {\n            onResize: event => this.onResize(event)\n        }\n\n        this.init()\n    }\n\n    /**\n     * Add custom property or method to extend DataTable\n     * @param  {String} prop    - Method name or property\n     * @param  {Mixed} val      - Function or property value\n     * @return {Void}\n     */\n    static extend(prop, val) {\n        if (typeof val === \"function\") {\n            DataTable.prototype[prop] = val\n        } else {\n            DataTable[prop] = val\n        }\n    }\n\n    /**\n     * Initialize the instance\n     * @param  {Object} options\n     * @return {Void}\n     */\n    init(options) {\n        if (this.initialized || this.dom.classList.contains(\"dataTable-table\")) {\n            return false\n        }\n\n        Object.assign(this.options, options || {})\n\n        this.currentPage = 1\n        this.onFirstPage = true\n\n        this.hiddenColumns = []\n        this.columnRenderers = []\n        this.selectedColumns = []\n\n        this.render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n\n            if (this.options.plugins) {\n                Object.entries(this.options.plugins).forEach(([plugin, options]) => {\n                    if (this[plugin] && typeof this[plugin] === \"function\") {\n                        this[plugin] = this[plugin](options, {createElement})\n\n                        // Init plugin\n                        if (options.enabled && this[plugin].init && typeof this[plugin].init === \"function\") {\n                            this[plugin].init()\n                        }\n                    }\n                })\n            }\n        }, 10)\n    }\n\n    /**\n     * Render the instance\n     * @param  {String} type\n     * @return {Void}\n     */\n    render(type) {\n        if (type) {\n            switch (type) {\n            case \"page\":\n                this.renderPage()\n                break\n            case \"pager\":\n                this.renderPager()\n                break\n            case \"header\":\n                this.renderHeader()\n                break\n            }\n\n            return false\n        }\n\n        const options = this.options\n        let template = \"\"\n\n        // Convert data to HTML\n        if (options.data) {\n            dataToTable.call(this)\n        }\n\n        // Store references\n        this.body = this.dom.tBodies[0]\n        this.head = this.dom.tHead\n        this.foot = this.dom.tFoot\n\n        if (!this.body) {\n            this.body = createElement(\"tbody\")\n\n            this.dom.appendChild(this.body)\n        }\n\n        this.hasRows = this.body.rows.length > 0\n\n        // Make a tHead if there isn't one (fixes #8)\n        if (!this.head) {\n            const h = createElement(\"thead\")\n            const t = createElement(\"tr\")\n\n            if (this.hasRows) {\n                Array.from(this.body.rows[0].cells).forEach(() => {\n                    t.appendChild(createElement(\"th\"))\n                })\n\n                h.appendChild(t)\n            }\n\n            this.head = h\n\n            this.dom.insertBefore(this.head, this.body)\n\n            this.hiddenHeader = options.hiddenHeader\n        }\n\n        this.headings = []\n        this.hasHeadings = this.head.rows.length > 0\n\n        if (this.hasHeadings) {\n            this.header = this.head.rows[0]\n            this.headings = [].slice.call(this.header.cells)\n        }\n\n        // Header\n        if (!options.header) {\n            if (this.head) {\n                this.dom.removeChild(this.dom.tHead)\n            }\n        }\n\n        // Footer\n        if (options.footer) {\n            if (this.head && !this.foot) {\n                this.foot = createElement(\"tfoot\", {\n                    html: this.head.innerHTML\n                })\n                this.dom.appendChild(this.foot)\n            }\n        } else {\n            if (this.foot) {\n                this.dom.removeChild(this.dom.tFoot)\n            }\n        }\n\n        // Build\n        this.wrapper = createElement(\"div\", {\n            class: \"dataTable-wrapper dataTable-loading\"\n        })\n\n        // Template for custom layouts\n        template += \"<div class='dataTable-top'>\"\n        template += options.layout.top\n        template += \"</div>\"\n        if (options.scrollY.length) {\n            template += `<div class='dataTable-container' style='height: ${options.scrollY}; overflow-Y: auto;'></div>`\n        } else {\n            template += \"<div class='dataTable-container'></div>\"\n        }\n        template += \"<div class='dataTable-bottom'>\"\n        template += options.layout.bottom\n        template += \"</div>\"\n\n        // Info placement\n        template = template.replace(\"{info}\", options.paging ? \"<div class='dataTable-info'></div>\" : \"\")\n\n        // Per Page Select\n        if (options.paging && options.perPageSelect) {\n            let wrap = \"<div class='dataTable-dropdown'><label>\"\n            wrap += options.labels.perPage\n            wrap += \"</label></div>\"\n\n            // Create the select\n            const select = createElement(\"select\", {\n                class: \"dataTable-selector\"\n            })\n\n            // Create the options\n            options.perPageSelect.forEach(val => {\n                const selected = val === options.perPage\n                const option = new Option(val, val, selected, selected)\n                select.add(option)\n            })\n\n            // Custom label\n            wrap = wrap.replace(\"{select}\", select.outerHTML)\n\n            // Selector placement\n            template = template.replace(\"{select}\", wrap)\n        } else {\n            template = template.replace(\"{select}\", \"\")\n        }\n\n        // Searchable\n        if (options.searchable) {\n            const form =\n                `<div class='dataTable-search'><input class='dataTable-input' placeholder='${options.labels.placeholder}' type='text'></div>`\n\n            // Search input placement\n            template = template.replace(\"{search}\", form)\n        } else {\n            template = template.replace(\"{search}\", \"\")\n        }\n\n        if (this.hasHeadings) {\n            // Sortable\n            this.render(\"header\")\n        }\n\n        // Add table class\n        this.dom.classList.add(\"dataTable-table\")\n\n        // Paginator\n        const paginatorWrapper = createElement(\"nav\", {\n            class: \"dataTable-pagination\"\n        })\n        const paginator = createElement(\"ul\", {\n            class: \"dataTable-pagination-list\"\n        })\n        paginatorWrapper.appendChild(paginator)\n\n        // Pager(s) placement\n        template = template.replace(/\\{pager\\}/g, paginatorWrapper.outerHTML)\n        this.wrapper.innerHTML = template\n\n        this.container = this.wrapper.querySelector(\".dataTable-container\")\n\n        this.pagers = this.wrapper.querySelectorAll(\".dataTable-pagination-list\")\n\n        this.label = this.wrapper.querySelector(\".dataTable-info\")\n\n        // Insert in to DOM tree\n        this.dom.parentNode.replaceChild(this.wrapper, this.dom)\n        this.container.appendChild(this.dom)\n\n        // Store the table dimensions\n        this.rect = this.dom.getBoundingClientRect()\n\n        // Convert rows to array for processing\n        this.data = Array.from(this.body.rows)\n        this.activeRows = this.data.slice()\n        this.activeHeadings = this.headings.slice()\n\n        // Update\n        this.update()\n\n\n        this.setColumns()\n\n\n        // Fix height\n        this.fixHeight()\n\n        // Fix columns\n        this.fixColumns()\n\n        // Class names\n        if (!options.header) {\n            this.wrapper.classList.add(\"no-header\")\n        }\n\n        if (!options.footer) {\n            this.wrapper.classList.add(\"no-footer\")\n        }\n\n        if (options.sortable) {\n            this.wrapper.classList.add(\"sortable\")\n        }\n\n        if (options.searchable) {\n            this.wrapper.classList.add(\"searchable\")\n        }\n\n        if (options.fixedHeight) {\n            this.wrapper.classList.add(\"fixed-height\")\n        }\n\n        if (options.fixedColumns) {\n            this.wrapper.classList.add(\"fixed-columns\")\n        }\n\n        this.bindEvents()\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    renderPage() {\n        if (this.hasHeadings) {\n            flush(this.header)\n\n            this.activeHeadings.forEach(th => this.header.appendChild(th))\n        }\n\n\n        if (this.hasRows && this.totalPages) {\n            if (this.currentPage > this.totalPages) {\n                this.currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            const index = this.currentPage - 1\n\n            const frag = document.createDocumentFragment()\n            this.pages[index].forEach(row => frag.appendChild(this.rows().render(row)))\n\n            this.clear(frag)\n\n            this.onFirstPage = this.currentPage === 1\n            this.onLastPage = this.currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this.currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this.searching ? this.searchData.length : this.data.length\n        }\n\n        if (this.label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", f)\n                .replace(\"{end}\", t)\n                .replace(\"{page}\", this.currentPage)\n                .replace(\"{pages}\", this.totalPages)\n                .replace(\"{rows}\", items)\n\n            this.label.innerHTML = items ? string : \"\"\n        }\n\n        if (this.currentPage == 1) {\n            this.fixHeight()\n        }\n    }\n\n    /**\n     * Render the pager(s)\n     * @return {Void}\n     */\n    renderPager() {\n        flush(this.pagers)\n\n        if (this.totalPages > 1) {\n            const c = \"pager\"\n            const frag = document.createDocumentFragment()\n            const prev = this.onFirstPage ? 1 : this.currentPage - 1\n            const next = this.onLastPage ? this.totalPages : this.currentPage + 1\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, 1, this.options.firstText))\n            }\n\n            // prev button\n            if (this.options.nextPrev && !this.onFirstPage) {\n                frag.appendChild(button(c, prev, this.options.prevText))\n            }\n\n            let pager = this.links\n\n            // truncate the links\n            if (this.options.truncatePager) {\n                pager = truncate(\n                    this.links,\n                    this.currentPage,\n                    this.pages.length,\n                    this.options.pagerDelta,\n                    this.options.ellipsisText\n                )\n            }\n\n            // active page link\n            this.links[this.currentPage - 1].classList.add(\"active\")\n\n            // append the links\n            pager.forEach(p => {\n                p.classList.remove(\"active\")\n                frag.appendChild(p)\n            })\n\n            this.links[this.currentPage - 1].classList.add(\"active\")\n\n            // next button\n            if (this.options.nextPrev && !this.onLastPage) {\n                frag.appendChild(button(c, next, this.options.nextText))\n            }\n\n            // first button\n            if (this.options.firstLast) {\n                frag.appendChild(button(c, this.totalPages, this.options.lastText))\n            }\n\n            // We may have more than one pager\n            this.pagers.forEach(pager => {\n                pager.appendChild(frag.cloneNode(true))\n            })\n        }\n    }\n\n    /**\n     * Render the header\n     * @return {Void}\n     */\n    renderHeader() {\n        this.labels = []\n\n        if (this.headings && this.headings.length) {\n            this.headings.forEach((th, i) => {\n\n                this.labels[i] = th.textContent\n\n                if (th.firstElementChild && th.firstElementChild.classList.contains(\"dataTable-sorter\")) {\n                    th.innerHTML = th.firstElementChild.innerHTML\n                }\n\n                th.sortable = th.getAttribute(\"data-sortable\") !== \"false\"\n\n                th.originalCellIndex = i\n                if (this.options.sortable && th.sortable) {\n                    const link = createElement(\"a\", {\n                        href: \"#\",\n                        class: \"dataTable-sorter\",\n                        html: th.innerHTML\n                    })\n\n                    th.innerHTML = \"\"\n                    th.setAttribute(\"data-sortable\", \"\")\n                    th.appendChild(link)\n                }\n            })\n        }\n\n        this.fixColumns()\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    bindEvents() {\n        const options = this.options\n        // Per page selector\n        if (options.perPageSelect) {\n            const selector = this.wrapper.querySelector(\".dataTable-selector\")\n            if (selector) {\n                // Change per page\n                selector.addEventListener(\"change\", () => {\n                    options.perPage = parseInt(selector.value, 10)\n                    this.update()\n\n                    this.fixHeight()\n\n                    this.emit(\"datatable.perpage\", options.perPage)\n                }, false)\n            }\n        }\n\n        // Search input\n        if (options.searchable) {\n            this.input = this.wrapper.querySelector(\".dataTable-input\")\n            if (this.input) {\n                this.input.addEventListener(\"keyup\", () => this.search(this.input.value), false)\n            }\n        }\n\n        // Pager(s) / sorting\n        this.wrapper.addEventListener(\"click\", e => {\n            const t = e.target.closest(\"a\")\n            if (t && (t.nodeName.toLowerCase() === \"a\")) {\n                if (t.hasAttribute(\"data-page\")) {\n                    this.page(t.getAttribute(\"data-page\"))\n                    e.preventDefault()\n                } else if (\n                    options.sortable &&\n                    t.classList.contains(\"dataTable-sorter\") &&\n                    t.parentNode.getAttribute(\"data-sortable\") != \"false\"\n                ) {\n                    this.columns().sort(this.headings.indexOf(t.parentNode))\n                    e.preventDefault()\n                }\n            }\n        }, false)\n\n        window.addEventListener(\"resize\", this.listeners.onResize)\n    }\n\n    /**\n     * execute on resize\n     */\n    onResize() {\n        this.rect = this.container.getBoundingClientRect()\n        if (!this.rect.width) {\n            // No longer shown, likely no longer part of DOM. Give up.\n            return\n        }\n        this.fixColumns()\n    }\n\n    /**\n     * Set up columns\n     * @return {[type]} [description]\n     */\n    setColumns(ajax) {\n\n        if (!ajax) {\n            this.data.forEach(row => {\n                Array.from(row.cells).forEach(cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n        }\n\n        // Check for the columns option\n        if (this.options.columns && this.headings.length) {\n\n            this.options.columns.forEach(data => {\n\n                // convert single column selection to array\n                if (!Array.isArray(data.select)) {\n                    data.select = [data.select]\n                }\n\n                if (data.hasOwnProperty(\"render\") && typeof data.render === \"function\") {\n                    this.selectedColumns = this.selectedColumns.concat(data.select)\n\n                    this.columnRenderers.push({\n                        columns: data.select,\n                        renderer: data.render\n                    })\n                }\n\n                // Add the data attributes to the th elements\n                data.select.forEach(column => {\n                    const th = this.headings[column]\n                    if (data.type) {\n                        th.setAttribute(\"data-type\", data.type)\n                    }\n                    if (data.format) {\n                        th.setAttribute(\"data-format\", data.format)\n                    }\n                    if (data.hasOwnProperty(\"sortable\")) {\n                        th.setAttribute(\"data-sortable\", data.sortable)\n                    }\n\n                    if (data.hasOwnProperty(\"hidden\")) {\n                        if (data.hidden !== false) {\n                            this.columns().hide([column])\n                        }\n                    }\n\n                    if (data.hasOwnProperty(\"sort\") && data.select.length === 1) {\n                        this.columns().sort(data.select[0], data.sort, true)\n                    }\n                })\n            })\n        }\n\n        if (this.hasRows) {\n            this.data.forEach((row, i) => {\n                row.dataIndex = i\n                Array.from(row.cells).forEach(cell => {\n                    cell.data = cell.innerHTML\n                })\n            })\n\n            if (this.selectedColumns.length) {\n                this.data.forEach(row => {\n                    Array.from(row.cells).forEach((cell, i) => {\n                        if (this.selectedColumns.includes(i)) {\n                            this.columnRenderers.forEach(options => {\n                                if (options.columns.includes(i)) {\n                                    cell.innerHTML = options.renderer.call(this, cell.data, cell, row)\n                                }\n                            })\n                        }\n                    })\n                })\n            }\n\n            this.columns().rebuild()\n        }\n\n        this.render(\"header\")\n    }\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        this.dom.innerHTML = this.initialLayout\n\n        // Remove the className\n        this.dom.classList.remove(\"dataTable-table\")\n\n        // Remove the containers\n        this.wrapper.parentNode.replaceChild(this.dom, this.wrapper)\n\n        this.initialized = false\n\n        window.removeEventListener(\"resize\", this.listeners.onResize)\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update() {\n        this.wrapper.classList.remove(\"dataTable-empty\")\n\n        this.paginate(this)\n        this.render(\"page\")\n\n        this.links = []\n\n        let i = this.pages.length\n        while (i--) {\n            const num = i + 1\n            this.links[i] = button(i === 0 ? \"active\" : \"\", num, num)\n        }\n\n        this.sorting = false\n\n        this.render(\"pager\")\n\n        this.rows().update()\n\n        this.emit(\"datatable.update\")\n    }\n\n    /**\n     * Sort rows into pages\n     * @return {Number}\n     */\n    paginate() {\n        const perPage = this.options.perPage\n        let rows = this.activeRows\n\n        if (this.searching) {\n            rows = []\n\n            this.searchData.forEach(index => rows.push(this.activeRows[index]))\n        }\n\n        if (this.options.paging) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((tr, i) => i % perPage === 0 ? rows.slice(i, i + perPage) : null)\n                .filter(page => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        return this.totalPages\n    }\n\n    /**\n     * Fix column widths\n     * @return {Void}\n     */\n    fixColumns() {\n\n        if ((this.options.scrollY.length || this.options.fixedColumns) && this.activeHeadings && this.activeHeadings.length) {\n            let cells\n            let hd = false\n            this.columnWidths = []\n\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.dom.tHead) {\n\n                if (this.options.scrollY.length) {\n                    hd = createElement(\"thead\")\n                    hd.appendChild(createElement(\"tr\"))\n                    hd.style.height = \"0px\"\n                    if (this.headerTable) {\n                        // move real header back into place\n                        this.dom.tHead = this.headerTable.tHead\n                    }\n                }\n\n                // Reset widths\n                this.activeHeadings.forEach(cell => {\n                    cell.style.width = \"\"\n                })\n\n                this.activeHeadings.forEach((cell, i) => {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    cell.style.width = `${w}%`\n                    this.columnWidths[i] = ow\n                    if (this.options.scrollY.length) {\n                        const th = createElement(\"th\")\n                        hd.firstElementChild.appendChild(th)\n                        th.style.width = `${w}%`\n                        th.style.paddingTop = \"0\"\n                        th.style.paddingBottom = \"0\"\n                        th.style.border = \"0\"\n                    }\n                })\n\n                if (this.options.scrollY.length) {\n                    const container = this.dom.parentElement\n                    if (!this.headerTable) {\n                        this.headerTable = createElement(\"table\", {\n                            class: \"dataTable-table\"\n                        })\n                        const headercontainer = createElement(\"div\", {\n                            class: \"dataTable-headercontainer\"\n                        })\n                        headercontainer.appendChild(this.headerTable)\n                        container.parentElement.insertBefore(headercontainer, container)\n                    }\n                    const thd = this.dom.tHead\n                    this.dom.replaceChild(hd, thd)\n                    this.headerTable.tHead = thd\n\n                    // Compensate for scrollbars.\n                    this.headerTable.parentElement.style.paddingRight = `${\n                        this.headerTable.clientWidth -\n                        this.dom.clientWidth +\n                        parseInt(\n                            this.headerTable.parentElement.style.paddingRight ||\n                            \"0\",\n                            10\n                        )\n                    }px`\n\n                    if (container.scrollHeight > container.clientHeight) {\n                        // scrollbars on one page means scrollbars on all pages.\n                        container.style.overflowY = \"scroll\"\n                    }\n                }\n\n            } else {\n                cells = []\n\n                // Make temperary headings\n                hd = createElement(\"thead\")\n                const r = createElement(\"tr\")\n                Array.from(this.dom.tBodies[0].rows[0].cells).forEach(() => {\n                    const th = createElement(\"th\")\n                    r.appendChild(th)\n                    cells.push(th)\n                })\n\n                hd.appendChild(r)\n                this.dom.insertBefore(hd, this.body)\n\n                const widths = []\n                cells.forEach((cell, i) => {\n                    const ow = cell.offsetWidth\n                    const w = ow / this.rect.width * 100\n                    widths.push(w)\n                    this.columnWidths[i] = ow\n                })\n\n                this.data.forEach(row => {\n                    Array.from(row.cells).forEach((cell, i) => {\n                        if (this.columns(cell.cellIndex).visible())\n                            cell.style.width = `${widths[i]}%`\n                    })\n                })\n\n                // Discard the temp header\n                this.dom.removeChild(hd)\n            }\n        }\n    }\n\n    /**\n     * Fix the container height\n     * @return {Void}\n     */\n    fixHeight() {\n        if (this.options.fixedHeight) {\n            this.container.style.height = null\n            this.rect = this.container.getBoundingClientRect()\n            this.container.style.height = `${this.rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a search of the data set\n     * @param  {string} query\n     * @return {void}\n     */\n    search(query) {\n        if (!this.hasRows) return false\n\n        query = query.toLowerCase()\n\n        this.currentPage = 1\n        this.searching = true\n        this.searchData = []\n\n        if (!query.length) {\n            this.searching = false\n            this.update()\n            this.emit(\"datatable.search\", query, this.searchData)\n            this.wrapper.classList.remove(\"search-results\")\n            return false\n        }\n\n        this.clear()\n\n        this.data.forEach((row, idx) => {\n            const inArray = this.searchData.includes(row)\n\n            // https://github.com/Mobius1/Vanilla-DataTables/issues/12\n            const doesQueryMatch = query.split(\" \").reduce((bool, word) => {\n                let includes = false\n                let cell = null\n                let content = null\n\n                for (let x = 0; x < row.cells.length; x++) {\n                    cell = row.cells[x]\n                    content = cell.hasAttribute(\"data-content\") ? cell.getAttribute(\"data-content\") : cell.textContent\n\n                    if (\n                        content.toLowerCase().includes(word) &&\n                        this.columns(cell.cellIndex).visible()\n                    ) {\n                        includes = true\n                        break\n                    }\n                }\n\n                return bool && includes\n            }, true)\n\n            if (doesQueryMatch && !inArray) {\n                row.searchIndex = idx\n                this.searchData.push(idx)\n            } else {\n                row.searchIndex = null\n            }\n        })\n\n        this.wrapper.classList.add(\"search-results\")\n\n        if (!this.searchData.length) {\n            this.wrapper.classList.remove(\"search-results\")\n\n            this.setMessage(this.options.labels.noResults)\n        } else {\n            this.update()\n        }\n\n        this.emit(\"datatable.search\", query, this.searchData)\n    }\n\n    /**\n     * Change page\n     * @param  {int} page\n     * @return {void}\n     */\n    page(page) {\n        // We don't want to load the current page again.\n        if (page == this.currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this.currentPage = parseInt(page, 10)\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this.render(\"page\")\n        this.render(\"pager\")\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Sort by column\n     * @param  {int} column - The column no.\n     * @param  {string} direction - asc or desc\n     * @return {void}\n     */\n    sortColumn(column, direction) {\n        // Use columns API until sortColumn method is removed\n        this.columns().sort(column, direction)\n    }\n\n    /**\n     * Add new row data\n     * @param {object} data\n     */\n    insert(data) {\n        let rows = []\n        if (isObject(data)) {\n            if (data.headings) {\n                if (!this.hasHeadings && !this.hasRows) {\n                    const tr = createElement(\"tr\")\n                    data.headings.forEach(heading => {\n                        const th = createElement(\"th\", {\n                            html: heading\n                        })\n\n                        tr.appendChild(th)\n                    })\n                    this.head.appendChild(tr)\n\n                    this.header = tr\n                    this.headings = [].slice.call(tr.cells)\n                    this.hasHeadings = true\n\n                    // Re-enable sorting if it was disabled due\n                    // to missing header\n                    this.options.sortable = this.initialSortable\n\n                    // Allow sorting on new header\n                    this.render(\"header\")\n\n                    // Activate newly added headings\n                    this.activeHeadings = this.headings.slice()\n                }\n            }\n\n            if (data.data && Array.isArray(data.data)) {\n                rows = data.data\n            }\n        } else if (Array.isArray(data)) {\n            data.forEach(row => {\n                const r = []\n                Object.entries(row).forEach(([heading, cell]) => {\n\n                    const index = this.labels.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = cell\n                    }\n                })\n                rows.push(r)\n            })\n        }\n\n        if (rows.length) {\n            this.rows().add(rows)\n\n            this.hasRows = true\n        }\n\n        this.update()\n        this.setColumns()\n        this.fixColumns()\n    }\n\n    /**\n     * Refresh the instance\n     * @return {void}\n     */\n    refresh() {\n        if (this.options.searchable) {\n            this.input.value = \"\"\n            this.searching = false\n        }\n        this.currentPage = 1\n        this.onFirstPage = true\n        this.update()\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Truncate the table\n     * @param  {mixes} html - HTML string or HTMLElement\n     * @return {void}\n     */\n    clear(html) {\n        if (this.body) {\n            flush(this.body)\n        }\n\n        let parent = this.body\n        if (!this.body) {\n            parent = this.dom\n        }\n\n        if (html) {\n            if (typeof html === \"string\") {\n                const frag = document.createDocumentFragment()\n                frag.innerHTML = html\n            }\n\n            parent.appendChild(html)\n        }\n    }\n\n    /**\n     * Export table to various formats (csv, txt or sql)\n     * @param  {Object} userOptions User options\n     * @return {Boolean}\n     */\n    export(userOptions) {\n        if (!this.hasHeadings && !this.hasRows) return false\n\n        const headers = this.activeHeadings\n        let rows = []\n        const arr = []\n        let i\n        let x\n        let str\n        let link\n\n        const defaults = {\n            download: true,\n            skipColumn: [],\n\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\",\n\n            // sql\n            tableName: \"myTable\",\n\n            // json\n            replacer: null,\n            space: 4\n        }\n\n        // Check for the options object\n        if (!isObject(userOptions)) {\n            return false\n        }\n\n        const options = {\n            ...defaults,\n            ...userOptions\n        }\n\n        if (options.type) {\n            if (options.type === \"txt\" || options.type === \"csv\") {\n                // Include headings\n                rows[0] = this.header\n            }\n\n            // Selection or whole table\n            if (options.selection) {\n                // Page number\n                if (!isNaN(options.selection)) {\n                    rows = rows.concat(this.pages[options.selection - 1])\n                } else if (Array.isArray(options.selection)) {\n                    // Array of page numbers\n                    for (i = 0; i < options.selection.length; i++) {\n                        rows = rows.concat(this.pages[options.selection[i] - 1])\n                    }\n                }\n            } else {\n                rows = rows.concat(this.activeRows)\n            }\n\n            // Only proceed if we have data\n            if (rows.length) {\n                if (options.type === \"txt\" || options.type === \"csv\") {\n                    str = \"\"\n\n                    for (i = 0; i < rows.length; i++) {\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and visibility\n                            if (\n                                !options.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                let text = rows[i].cells[x].textContent\n                                text = text.trim()\n                                text = text.replace(/\\s{2,}/g, \" \")\n                                text = text.replace(/\\n/g, \"  \")\n                                text = text.replace(/\"/g, \"\\\"\\\"\")\n                                //have to manually encode \"#\" as encodeURI leaves it as is.\n                                text = text.replace(/#/g, \"%23\")\n                                if (text.includes(\",\"))\n                                    text = `\"${text}\"`\n\n\n                                str += text + options.columnDelimiter\n                            }\n                        }\n                        // Remove trailing column delimiter\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // Apply line delimiter\n                        str += options.lineDelimiter\n                    }\n\n                    // Remove trailing line delimiter\n                    str = str.trim().substring(0, str.length - 1)\n\n                    if (options.download) {\n                        str = `data:text/csv;charset=utf-8,${str}`\n                    }\n                } else if (options.type === \"sql\") {\n                    // Begin INSERT statement\n                    str = `INSERT INTO \\`${options.tableName}\\` (`\n\n                    // Convert table headings to column names\n                    for (i = 0; i < headers.length; i++) {\n                        // Check for column skip and column visibility\n                        if (\n                            !options.skipColumn.includes(headers[i].originalCellIndex) &&\n                            this.columns(headers[i].originalCellIndex).visible()\n                        ) {\n                            str += `\\`${headers[i].textContent}\\`,`\n                        }\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Begin VALUES\n                    str += \") VALUES \"\n\n                    // Iterate rows and convert cell data to column values\n                    for (i = 0; i < rows.length; i++) {\n                        str += \"(\"\n\n                        for (x = 0; x < rows[i].cells.length; x++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !options.skipColumn.includes(headers[x].originalCellIndex) &&\n                                this.columns(headers[x].originalCellIndex).visible()\n                            ) {\n                                str += `\"${rows[i].cells[x].textContent}\",`\n                            }\n                        }\n\n                        // Remove trailing comma\n                        str = str.trim().substring(0, str.length - 1)\n\n                        // end VALUES\n                        str += \"),\"\n                    }\n\n                    // Remove trailing comma\n                    str = str.trim().substring(0, str.length - 1)\n\n                    // Add trailing colon\n                    str += \";\"\n\n                    if (options.download) {\n                        str = `data:application/sql;charset=utf-8,${str}`\n                    }\n                } else if (options.type === \"json\") {\n                    // Iterate rows\n                    for (x = 0; x < rows.length; x++) {\n                        arr[x] = arr[x] || {}\n                        // Iterate columns\n                        for (i = 0; i < headers.length; i++) {\n                            // Check for column skip and column visibility\n                            if (\n                                !options.skipColumn.includes(headers[i].originalCellIndex) &&\n                                this.columns(headers[i].originalCellIndex).visible()\n                            ) {\n                                arr[x][headers[i].textContent] = rows[x].cells[i].textContent\n                            }\n                        }\n                    }\n\n                    // Convert the array of objects to JSON string\n                    str = JSON.stringify(arr, options.replacer, options.space)\n\n                    if (options.download) {\n                        str = `data:application/json;charset=utf-8,${str}`\n                    }\n                }\n\n                // Download\n                if (options.download) {\n                    // Filename\n                    options.filename = options.filename || \"datatable_export\"\n                    options.filename += `.${options.type}`\n\n                    str = encodeURI(str)\n\n                    // Create a link to trigger the download\n                    link = document.createElement(\"a\")\n                    link.href = str\n                    link.download = options.filename\n\n                    // Append the link\n                    document.body.appendChild(link)\n\n                    // Trigger the download\n                    link.click()\n\n                    // Remove the link\n                    document.body.removeChild(link)\n                }\n\n                return str\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Import data to the table\n     * @param  {Object} userOptions User options\n     * @return {Boolean}\n     */\n    import(userOptions) {\n        let obj = false\n        const defaults = {\n            // csv\n            lineDelimiter: \"\\n\",\n            columnDelimiter: \",\"\n        }\n\n        // Check for the options object\n        if (!isObject(userOptions)) {\n            return false\n        }\n\n        const options = {\n            ...defaults,\n            ...userOptions\n        }\n\n        if (options.data.length || isObject(options.data)) {\n            // Import CSV\n            if (options.type === \"csv\") {\n                obj = {\n                    data: []\n                }\n\n                // Split the string into rows\n                const rows = options.data.split(options.lineDelimiter)\n\n                if (rows.length) {\n\n                    if (options.headings) {\n                        obj.headings = rows[0].split(options.columnDelimiter)\n\n                        rows.shift()\n                    }\n\n                    rows.forEach((row, i) => {\n                        obj.data[i] = []\n\n                        // Split the rows into values\n                        const values = row.split(options.columnDelimiter)\n\n                        if (values.length) {\n                            values.forEach(value => {\n                                obj.data[i].push(value)\n                            })\n                        }\n                    })\n                }\n            } else if (options.type === \"json\") {\n                const json = isJson(options.data)\n\n                // Valid JSON string\n                if (json) {\n                    obj = {\n                        headings: [],\n                        data: []\n                    }\n\n                    json.forEach((data, i) => {\n                        obj.data[i] = []\n                        Object.entries(data).forEach(([column, value]) => {\n                            if (!obj.headings.includes(column)) {\n                                obj.headings.push(column)\n                            }\n\n                            obj.data[i].push(value)\n                        })\n                    })\n                } else {\n                    // console.warn(\"That's not valid JSON!\")\n                }\n            }\n\n            if (isObject(options.data)) {\n                obj = options.data\n            }\n\n            if (obj) {\n                // Add the rows\n                this.insert(obj)\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Print the table\n     * @return {void}\n     */\n    print() {\n        const headings = this.activeHeadings\n        const rows = this.activeRows\n        const table = createElement(\"table\")\n        const thead = createElement(\"thead\")\n        const tbody = createElement(\"tbody\")\n\n        const tr = createElement(\"tr\")\n        headings.forEach(th => {\n            tr.appendChild(\n                createElement(\"th\", {\n                    html: th.textContent\n                })\n            )\n        })\n\n        thead.appendChild(tr)\n\n        rows.forEach(row => {\n            const tr = createElement(\"tr\")\n            Array.from(row.cells).forEach(cell => {\n                tr.appendChild(\n                    createElement(\"td\", {\n                        html: cell.textContent\n                    })\n                )\n            })\n            tbody.appendChild(tr)\n        })\n\n        table.appendChild(thead)\n        table.appendChild(tbody)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(table)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     * @param {string} message\n     */\n    setMessage(message) {\n        let colspan = 1\n\n        if (this.hasRows) {\n            colspan = this.data[0].cells.length\n        } else if (this.activeHeadings.length) {\n            colspan = this.activeHeadings.length\n        }\n\n        this.wrapper.classList.add(\"dataTable-empty\")\n\n        if (this.label) {\n            this.label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this.render(\"pager\")\n\n        this.clear(\n            createElement(\"tr\", {\n                html: `<td class=\"dataTables-empty\" colspan=\"${colspan}\">${message}</td>`\n            })\n        )\n    }\n\n    /**\n     * Columns API access\n     * @return {Object} new Columns instance\n     */\n    columns(columns) {\n        return new Columns(this, columns)\n    }\n\n    /**\n     * Rows API access\n     * @return {Object} new Rows instance\n     */\n    rows(rows) {\n        return new Rows(this, rows)\n    }\n\n    /**\n     * Add custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    on(event, callback) {\n        this.events = this.events || {}\n        this.events[event] = this.events[event] || []\n        this.events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     * @param  {String} event\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    off(event, callback) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        this.events[event].splice(this.events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     * @param  {String} event\n     * @return {Void}\n     */\n    emit(event) {\n        this.events = this.events || {}\n        if (event in this.events === false) return\n        for (let i = 0; i < this.events[event].length; i++) {\n            this.events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n        }\n    }\n}\n"],"file":"datatable.min.js"}